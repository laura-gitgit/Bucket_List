LIGNE DE COMMNANDE SYMFONY



//créer un projet
symfony new nomProjet

//composer => gestionnaires de dépendances (charge les librairies)
//Pour installer le paquet maker bundle qui permet de créer le controller automatiquement
composer require symfony/maker-bundle --dev

//importer le twigsymfony require twig
composer require twig

//ensuite pour le créer le controller
symfony console make:controller



//pour lancer l'API
symfony serve 

diverses ligne de commande : 

Usage: 
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list c
ommand
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -e, --env=ENV         The Environment name. [default: "dev"]
      --no-debug        Switch off debug mode.
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3
 for debug

Available commands: 
  about                       Display information about the current project
  completion                  Dump the shell completion script
  help                        Display help for a command
  list                        List commands
 assets
  assets:install              Install bundle's web assets under a public directory
 cache
  cache:clear                 Clear the cache
  cache:pool:clear            Clear cache pools
  cache:pool:delete           Delete an item from a cache pool
  cache:pool:invalidate-tags  Invalidate cache tags for all or a specific pool
  cache:pool:list             List available cache pools
  cache:pool:prune            Prune cache pools
  cache:warmup                Warm up an empty cache
 config
  config:dump-reference       Dump the default configuration for an extension
 debug
  debug:autowiring            List classes/interfaces you can use for autowiring
  debug:config                Dump the current configuration for an extension
  debug:container             Display current services for an application
  debug:dotenv                Lists all dotenv files with variables and values
  debug:event-dispatcher      Display configured listeners for an application
  debug:router                Display current routes for an application
  debug:twig                  Show a list of twig functions, filters, globals and tests
  make:twig-extension         Creates a new Twig extension with its runtime class
  make:user                   Creates a new security user class
  make:validator              Creates a new validator and constraint class
  make:voter                  Creates a new security voter class
 router
  router:match                Help debug routes by simulating a path info match
 secrets
  secrets:decrypt-to-local    Decrypt all secrets and stores them in the local vault
  secrets:encrypt-from-local  Encrypt all local secrets to the vault
  secrets:generate-keys       Generate new encryption keys
  secrets:list                List all secrets
  secrets:remove              Remove a secret from the vault
  secrets:set                 Set a secret in the vault



définition route : correspondance entre une méthode et ce que vous avez écrit dans l'url

facon pour définir une route : 
	PHP (PERSONNE ne fait ca en PHP natif), 
	YAML (fichier de config dans lequel on peut mettre toutes les routes), 
	XML (comme le YAML mais en moins bien)
	Annotations :   /**
					* @UneAnnotation(cle="valeur1", cle2="valeur2")
					**/	